# swagger/paths/contacts/{id}/get.yaml
tags:
  - Contacts
summary: Get a list of all contacts
operationId:  getContacts
description: 'Get list of users with this endpoint. Get all contacts, sorting contacts by different parametres'
security:
  - bearerAuth: []
parameters:
  - in: query
    name: page
    required: false
    schema:
      type: integer
      example: 10
  - in: query
    name: perPage
    schema:
      type: integer
      example: 10
  - in: query
    name: sortBy
    schema:
      type: string
      example: 'name'
  - in: query
    name: sortOrder
    schema:
       type: string
       enum: ['asc', 'desc']
       example: 'asc'
  - in: query
    name: contactType
    schema:
      type: string
      enum: ['work', 'home', 'personal']
  - in: query
    name: isFavourite
    schema:
      type: boolean
responses:
  '200':
    description: Successfully found contacts!
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully found contacts!
            data:
              type: object
              required:
                - data
                - page
                - perPage
                - totalItems
                - totalPages
                - hasNextPage
                - hasPreviousPage
              properties:
                data:
                  type: array
                  items:
                    $ref: '../../components/schemas/contact.yaml'
                page:
                  type: number
                  example: 2
                perPage:
                  type: number
                  example: 4
                totalItems:
                  type: number
                  example: 4
                totalPages:
                  type: number
                  example: 4
                hasNextPage:
                  type: boolean
                  example: false
                hasPreviousPage:
                  type: boolean
                  example: true
  '401':
    $ref: '../../components/responses/401.yaml'
  # '404':
  #   $ref: '../../components/responses/404.yaml'
  # '500':
  #   $ref: '../../components/responses/500.yaml'


    # UPDATE!
#     parameters:
#   - in: path
#     name: id
#     required: true
#     schema:
#       type: string
#       example: '65ca67e7ae7f10c88b598384'

# in: path: Параметр знаходиться у шляху (URL).
# name: id: Ім'я параметра - id.
# required: true: Параметр є обов'язковим.
# schema: Схема параметра. Вказує, що тип даних - string.
# example: Приклад значення параметра.

# Код відповіді 200:description: Опис відповіді - Get student by id.

# content: Вміст відповіді. Вказує, що відповідь буде у форматі application/json.
# schema: Схема відповіді. Вказує на структуру об'єкта відповіді:
# type: object: Відповідь є об'єктом.
# required: Перелік обов'язкових полів (status, message, data).
# properties: Опис властивостей об'єкта відповіді:
# status: Тип - integer, приклад - 200.
# message: Тип - string, приклад - Successfully found student with id 65ca67e7ae7f10c88b598384!.
# data: Тип - object, посилання на схему студента ($ref: '../../../components/schemas/student.yaml').